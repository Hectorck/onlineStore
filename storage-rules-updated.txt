rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Funciones auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && (
        request.auth.uid == "byRByEqdFOYxXOmUu9clvujvIUg1" ||
        (request.auth.token.email != null && request.auth.token.email == "hectorcobea03@gmail.com")
      );
    }
    
    function isValidImageSize() {
      return request.resource.size < 10 * 1024 * 1024; // Máximo 10MB
    }
    
    function isValidImageType() {
      return request.resource.contentType.matches('image/.*');
    }
    
    // AVATARES DE USUARIOS (tus reglas existentes)
    match /avatars/{userId}/{anyFile} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // IMÁGENES DE PRODUCTOS (ACTUALIZADAS - más permisivas para desarrollo)
    match /products/{imageId} {
      // Lectura: siempre permitida (para mostrar las imágenes)
      allow read: if true;
      
      // Escritura: permitir para usuarios autenticados O durante desarrollo
      allow write: if (isAuthenticated() && isValidImageSize() && isValidImageType()) ||
                     (isValidImageSize() && isValidImageType()); // Fallback para desarrollo
      
      // Eliminación: solo admins
      allow delete: if isAdmin();
    }
    
    // IMÁGENES DE USUARIOS
    match /users/{userId}/{allPaths=**} {
      allow read: if true;
      allow write, delete: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // IMÁGENES TEMPORALES
    match /temp/{allPaths=**} {
      allow read, write: if isAuthenticated();
      allow delete: if isAuthenticated();
    }
    
    // DESARROLLO - Reglas más permisivas para imágenes de productos
    match /products_dev/{allPaths=**} {
      allow read: if true;
      allow write: if isValidImageSize() && isValidImageType();
      allow delete: if true;
    }
    
    // FALLBACK - Más permisivo para desarrollo (TEMPORALMENTE)
    match /{allPaths=**} {
      allow read: if true;
      // Para desarrollo: permitir escritura sin autenticación pero con validaciones
      allow write: if isValidImageSize() && request.resource.contentType.matches('image/.*');
      allow delete: if isAuthenticated();
    }
  }
}
